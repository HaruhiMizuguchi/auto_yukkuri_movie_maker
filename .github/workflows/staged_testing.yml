name: Staged Testing Strategy

on:
  push:
    branches: [ main, develop, 'feature/*' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Phase 1: 探索・プロトタイプ段階
  phase1_exploration:
    if: contains(github.event.head_commit.message, '[phase1]') || contains(github.ref, 'feature/explore')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-mock pytest-cov
        pip install -r requirements.txt
    
    - name: Run Phase 1 Tests (Unit Only)
      run: |
        echo "🔍 Phase 1: 探索的単体テスト実行"
        pytest tests/unit/ -v --tb=short
        echo "ℹ️  統合テストは意図的にスキップ（柔軟性優先）"
    
    - name: Check Phase 1 Success Criteria
      run: |
        python scripts/check_phase1_criteria.py

  # Phase 2: 安定化・MVP段階  
  phase2_stabilization:
    if: contains(github.event.head_commit.message, '[phase2]') || contains(github.ref, 'feature/stabilize')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-mock pytest-cov
        pip install -r requirements.txt
    
    - name: Run Phase 2 Tests (Unit + Contract + Critical Integration)
      run: |
        echo "⚖️  Phase 2: バランス重視テスト実行"
        pytest tests/unit/ tests/contracts/ tests/integration/critical/ -v
        echo "ℹ️  インターフェース固定・重要統合のみ"
    
    - name: Interface Stability Check
      run: |
        python scripts/check_interface_stability.py
    
    - name: Critical Integration Verification
      run: |
        python scripts/verify_critical_integrations.py

  # Phase 3: 本格実装段階
  phase3_production:
    if: contains(github.event.head_commit.message, '[phase3]') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-mock pytest-cov pytest-xdist
        pip install -r requirements.txt
    
    - name: Run Complete Test Suite
      run: |
        echo "🎯 Phase 3: 完全品質保証テスト実行"
        pytest tests/ -v --cov=src --cov-report=html --cov-report=xml
        echo "✅ 全レベルテスト（単体・統合・E2E）実行"
    
    - name: E2E Test Execution
      run: |
        pytest tests/e2e/ -v --tb=short
    
    - name: Performance Tests
      run: |
        pytest tests/performance/ -v
    
    - name: Production Quality Check
      run: |
        python scripts/check_production_quality.py
    
    - name: Upload Coverage Reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  # テスト戦略決定（自動）
  determine_test_strategy:
    runs-on: ubuntu-latest
    outputs:
      test_phase: ${{ steps.determine.outputs.phase }}
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Determine Test Phase
      id: determine
      run: |
        # ブランチ名とコミットメッセージから自動判定
        if [[ "${{ github.ref }}" == *"feature/explore"* ]] || [[ "${{ github.event.head_commit.message }}" == *"[phase1]"* ]]; then
          echo "phase=1" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == *"feature/stabilize"* ]] || [[ "${{ github.event.head_commit.message }}" == *"[phase2]"* ]]; then
          echo "phase=2" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/main" ]] || [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
          echo "phase=3" >> $GITHUB_OUTPUT
        else
          echo "phase=2" >> $GITHUB_OUTPUT  # デフォルトはPhase 2
        fi
    
    - name: Display Test Strategy
      run: |
        echo "🎯 決定されたテスト戦略: Phase ${{ steps.determine.outputs.phase }}"
        case "${{ steps.determine.outputs.phase }}" in
          "1") echo "📝 柔軟性優先：単体テストのみ実行" ;;
          "2") echo "⚖️  バランス重視：契約テスト + 重要統合テスト" ;;
          "3") echo "🛡️  品質優先：完全テストスイート実行" ;;
        esac 