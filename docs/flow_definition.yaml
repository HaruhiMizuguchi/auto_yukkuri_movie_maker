# ゆっくり動画自動生成ツール - フロー定義（データベース対応版）

# プロジェクト全体の設定
project:
  name: "ゆっくり動画自動生成ツール"
  version: "2.0.0"
  database_path: "data/yukkuri_tool.db"
  projects_base_dir: "projects"
  temp_dir: "temp"
  assets_dir: "assets"

# 新しいディレクトリ構造定義（データベース + ファイル管理）
directory_structure:
  database: "data/yukkuri_tool.db"
  project_root: "{projects_base_dir}/{project_id}"
  project_subdirectories:
    - "files/audio"          # 音声ファイル
    - "files/video"          # 動画ファイル
    - "files/images"         # 画像ファイル
    - "files/scripts"        # スクリプト関連
    - "files/metadata"       # メタデータファイル
    - "logs"                 # ログファイル
    - "cache"                # キャッシュファイル

# データ管理方式の説明
data_management:
  principle: "hybrid_database_file_system"
  description: "メタデータ・進捗状況・設定はデータベース管理、大きなファイルはファイルシステム管理"
  
  database_managed:
    - "プロジェクト基本情報"
    - "ワークフロー実行状況"
    - "ステップ間のデータ受け渡し"
    - "API使用履歴"
    - "統計情報"
    
  file_system_managed:
    - "音声ファイル（WAV、MP3）"
    - "動画ファイル（MP4）"
    - "画像ファイル（PNG、JPG）"
    - "ログファイル"
    - "キャッシュファイル"

# 処理フロー定義（データベース対応版）
workflows:
  
  # 1. テーマ選定
  theme_selection:
    step_id: 1
    step_name: "theme_selection"
    display_name: "テーマ選定"
    description: "動画のテーマを自動または手動で選定"
    
    # 入力データ取得方法
    inputs:
      method: "database_and_config"
      sources:
        user_preferences:
          source_type: "database"
          table: "projects"
          field: "config_json"
          schema:
            genre_history: "array[string]"
            preferred_genres: "array[string]"
            excluded_genres: "array[string]"
            target_audience: "string"
            content_style: "string"
        
        llm_config:
          source_type: "config_file"
          path: "config/llm_config.yaml"
    
    # 出力データ保存方法
    outputs:
      method: "database_with_file_references"
      database_fields:
        # projectsテーブル更新
        theme: "selected_theme.theme"
        target_length_minutes: "selected_theme.target_length_minutes"
        # workflow_stepsテーブル更新
        output_summary_json: "完全な出力データ"
      
      file_outputs:
        theme_candidates_file:
          file_type: "metadata"
          file_category: "output"
          relative_path: "files/metadata/theme_candidates.json"
          description: "テーマ候補一覧"
    
    processing:
      llm_model: "gemini-2.0-flash-preview-image-generation"
      max_candidates: 10
      retry_count: 3

  # 2. スクリプト生成
  script_generation:
    step_id: 2
    step_name: "script_generation"
    display_name: "スクリプト生成"
    description: "テーマに基づいてスクリプトを生成"
    
    inputs:
      method: "database_query"
      sources:
        selected_theme:
          source_type: "database"
          query: "SELECT theme, target_length_minutes FROM projects WHERE id = ?"
        
        previous_step_output:
          source_type: "database"
          table: "workflow_steps"
          where: "project_id = ? AND step_name = 'theme_selection' AND status = 'completed'"
        
        script_config:
          source_type: "project_config"
          config_key: "script_generation"
          default_values:
            target_duration_minutes: 5
            speaker_count: 2
            speaker_names: ["reimu", "marisa"]
            tone: "casual"
    
    outputs:
      method: "database_with_files"
      database_fields:
        estimated_duration: "script.total_estimated_duration"
      
      file_outputs:
        script_json:
          file_type: "script"
          file_category: "output"
          relative_path: "files/scripts/script.json"
          description: "構造化スクリプトデータ"
        
        script_text:
          file_type: "script"
          file_category: "output"
          relative_path: "files/scripts/script.txt"
          description: "プレーンテキスト版スクリプト"

  # 3. タイトル生成
  title_generation:
    step_id: 3
    step_name: "title_generation"
    display_name: "タイトル生成"
    description: "高CTRを狙ったタイトルを生成"
    
    inputs:
      method: "multi_source"
      sources:
        theme_data:
          source_type: "database"
          table: "projects"
          fields: ["theme", "target_length_minutes"]
        
        script_data:
          source_type: "file_reference"
          file_query: "project_id = ? AND step_name = 'script_generation' AND file_type = 'script'"
    
    outputs:
      method: "database_primary"
      database_fields:
        selected_title: "titles.selected_title"
        
      file_outputs:
        title_analysis:
          file_type: "metadata"
          file_category: "output"
          relative_path: "files/metadata/title_analysis.json"

  # 4. 音声生成（TTS）
  tts_generation:
    step_id: 4
    step_name: "tts_generation"
    display_name: "音声生成"
    description: "AIVIS Speech APIを使用した音声生成"
    
    inputs:
      method: "file_based"
      sources:
        script_data:
          source_type: "file_reference"
          file_query: "step_name = 'script_generation' AND file_type = 'script'"
        
        voice_config:
          source_type: "config_file"
          path: "config/voice_config.yaml"
    
    outputs:
      method: "files_with_metadata"
      file_outputs:
        audio_segments:
          file_type: "audio"
          file_category: "intermediate"
          relative_path: "files/audio/segments/"
          description: "各セグメントの音声ファイル（WAV形式）"
        
        combined_audio:
          file_type: "audio"
          file_category: "output"
          relative_path: "files/audio/combined.wav"
          description: "結合された音声ファイル"
        
        audio_metadata:
          file_type: "metadata"
          file_category: "output"
          relative_path: "files/metadata/audio_metadata.json"
          description: "タイムスタンプ情報"

  # 5. 立ち絵アニメーション
  character_synthesis:
    step_id: 5
    step_name: "character_synthesis"
    display_name: "立ち絵合成"
    description: "口パクと表情を同期した立ち絵動画生成"
    
    inputs:
      method: "metadata_and_assets"
      sources:
        audio_metadata:
          source_type: "file_reference"
          file_query: "step_name = 'tts_generation' AND file_type = 'metadata'"
        
        character_assets:
          source_type: "assets"
          path: "assets/characters/"
        
        character_config:
          source_type: "config_file"
          path: "config/character_config.yaml"
    
    outputs:
      method: "video_files"
      file_outputs:
        character_video:
          file_type: "video"
          file_category: "intermediate"
          relative_path: "files/video/character_animation.mp4"
          description: "立ち絵アニメーション動画（透明背景）"

  # 6. 背景生成
  background_generation:
    step_id: 6
    step_name: "background_generation"
    display_name: "背景画像生成"
    description: "シーンに応じた背景画像を生成"
    
    inputs:
      method: "script_based"
      sources:
        script_content:
          source_type: "file_reference"
          file_query: "step_name = 'script_generation' AND file_type = 'script'"
        
        image_generation_config:
          source_type: "config_file"
          path: "config/image_generation_config.yaml"
    
    outputs:
      method: "image_collection"
      file_outputs:
        background_images:
          file_type: "image"
          file_category: "intermediate"
          relative_path: "files/images/backgrounds/"
          description: "生成された背景画像（PNG形式）"

  # 7. 背景動画生成
  background_animation:
    step_id: 7
    step_name: "background_animation"
    display_name: "背景動画生成"
    description: "背景画像にKen Burnsエフェクト等を適用"
    
    inputs:
      method: "images_and_audio"
      sources:
        background_images:
          source_type: "file_reference"
          file_query: "step_name = 'background_generation' AND file_type = 'image'"
        
        audio_timing:
          source_type: "file_reference"
          file_query: "step_name = 'tts_generation' AND file_type = 'metadata'"
    
    outputs:
      method: "video_output"
      file_outputs:
        background_video:
          file_type: "video"
          file_category: "intermediate"
          relative_path: "files/video/background_animation.mp4"
          description: "動きを付けた背景動画"

  # 8. 字幕生成
  subtitle_generation:
    step_id: 8
    step_name: "subtitle_generation"
    display_name: "字幕生成"
    description: "音声タイムスタンプに基づく字幕生成"
    
    inputs:
      method: "script_and_timing"
      sources:
        script_data:
          source_type: "file_reference"
          file_query: "step_name = 'script_generation' AND file_type = 'script'"
        
        audio_metadata:
          source_type: "file_reference"
          file_query: "step_name = 'tts_generation' AND file_type = 'metadata'"
        
        subtitle_config:
          source_type: "config_file"
          path: "config/subtitle_config.yaml"
    
    outputs:
      method: "subtitle_files"
      file_outputs:
        subtitle_file:
          file_type: "subtitle"
          file_category: "intermediate"
          relative_path: "files/metadata/subtitle.ass"
          description: "字幕ファイル（Advanced SSA形式）"

  # 9. 動画合成
  video_composition:
    step_id: 9
    step_name: "video_composition"
    display_name: "動画合成"
    description: "背景、立ち絵、字幕、音声を合成"
    
    inputs:
      method: "multi_media"
      sources:
        background_video:
          source_type: "file_reference"
          file_query: "step_name = 'background_animation' AND file_type = 'video'"
        
        character_video:
          source_type: "file_reference"
          file_query: "step_name = 'character_synthesis' AND file_type = 'video'"
        
        combined_audio:
          source_type: "file_reference"
          file_query: "step_name = 'tts_generation' AND file_type = 'audio' AND file_category = 'output'"
        
        subtitle_file:
          source_type: "file_reference"
          file_query: "step_name = 'subtitle_generation' AND file_type = 'subtitle'"
    
    outputs:
      method: "video_output"
      file_outputs:
        composed_video:
          file_type: "video"
          file_category: "intermediate"
          relative_path: "files/video/composed_video.mp4"
          description: "基本合成済み動画"

  # 10. 効果音・BGM追加
  audio_enhancement:
    step_id: 10
    step_name: "audio_enhancement"
    display_name: "効果音・BGM追加"
    description: "効果音とBGMを適切なタイミングで挿入"
    
    inputs:
      method: "video_and_library"
      sources:
        composed_video:
          source_type: "file_reference"
          file_query: "step_name = 'video_composition' AND file_type = 'video'"
        
        subtitle_timing:
          source_type: "file_reference"
          file_query: "step_name = 'subtitle_generation' AND file_type = 'subtitle'"
        
        audio_library:
          source_type: "assets"
          path: "assets/audio/"
    
    outputs:
      method: "enhanced_video"
      file_outputs:
        enhanced_video:
          file_type: "video"
          file_category: "intermediate"
          relative_path: "files/video/enhanced_video.mp4"
          description: "効果音・BGM追加済み動画"

  # 11. 挿絵挿入
  illustration_insertion:
    step_id: 11
    step_name: "illustration_insertion"
    display_name: "挿絵挿入"
    description: "話題転換点での挿絵生成・挿入"
    
    inputs:
      method: "video_and_analysis"
      sources:
        enhanced_video:
          source_type: "file_reference"
          file_query: "step_name = 'audio_enhancement' AND file_type = 'video'"
        
        script_content:
          source_type: "file_reference"
          file_query: "step_name = 'script_generation' AND file_type = 'script'"
    
    outputs:
      method: "final_video"
      file_outputs:
        final_video:
          file_type: "video"
          file_category: "output"
          relative_path: "files/video/final_video.mp4"
          description: "挿絵挿入済み動画"
        
        illustrations:
          file_type: "image"
          file_category: "intermediate"
          relative_path: "files/images/illustrations/"
          description: "生成された挿絵"

  # 12. 最終エンコード
  final_encoding:
    step_id: 12
    step_name: "final_encoding"
    display_name: "最終エンコード"
    description: "配信用最終動画の生成"
    
    inputs:
      method: "video_optimization"
      sources:
        final_video:
          source_type: "file_reference"
          file_query: "step_name = 'illustration_insertion' AND file_type = 'video' AND file_category = 'output'"
        
        encoding_config:
          source_type: "config_file"
          path: "config/encoding_config.yaml"
    
    outputs:
      method: "final_output"
      file_outputs:
        output_video:
          file_type: "video"
          file_category: "final"
          relative_path: "files/video/output_video.mp4"
          description: "配信用最終動画ファイル"
      
      database_fields:
        final_video_path: "files/video/output_video.mp4"
        final_file_size: "ファイルサイズ（バイト）"

  # 13. YouTube投稿
  youtube_upload:
    step_id: 13
    step_name: "youtube_upload"
    display_name: "YouTube投稿"
    description: "YouTube Data APIを使用した自動投稿"
    
    inputs:
      method: "video_and_metadata"
      sources:
        output_video:
          source_type: "file_reference"
          file_query: "step_name = 'final_encoding' AND file_type = 'video' AND file_category = 'final'"
        
        video_title:
          source_type: "database"
          table: "workflow_steps"
          where: "project_id = ? AND step_name = 'title_generation'"
          field: "output_summary_json"
        
        youtube_config:
          source_type: "config_file"
          path: "config/youtube_config.yaml"
    
    outputs:
      method: "database_primary"
      database_fields:
        youtube_video_id: "upload_result.video_id"
        youtube_url: "upload_result.video_url"
        upload_status: "upload_result.status"
        upload_timestamp: "upload_result.timestamp"

# エラーハンドリング設定
error_handling:
  retry_settings:
    max_retries: 3
    retry_delay_seconds: 5
    exponential_backoff: true
    
  recovery_options:
    - "retry_step"
    - "skip_step"
    - "use_fallback"
    - "manual_intervention"
    
  logging:
    database_logging: true
    file_logging: true
    log_level: "INFO"

# 新しいデータアクセス関数定義
data_access_patterns:
  
  # ステップ間データ受け渡し
  get_step_input:
    description: "前のステップの出力を現在のステップの入力として取得"
    implementation: "ProjectRepository.get_step_input(project_id, step_name)"
  
  save_step_output:
    description: "ステップの出力をデータベース + ファイルシステムに保存"
    implementation: "ProjectRepository.save_step_result(step_name, data, files)"
  
  get_project_status:
    description: "プロジェクト全体の進捗状況を取得"
    implementation: "ProjectRepository.get_project_status(project_id)"
  
  get_file_reference:
    description: "ファイル参照情報を取得"
    implementation: "ProjectRepository.get_file_by_query(project_id, query)"

# 設定ファイル定義（変更なし）
config_files:
  llm_config:
    path: "config/llm_config.yaml"
    description: "LLM API設定"
    
  voice_config:
    path: "config/voice_config.yaml"
    description: "音声合成設定"
    
  character_config:
    path: "config/character_config.yaml"
    description: "立ち絵・キャラクター設定"
    
  subtitle_config:
    path: "config/subtitle_config.yaml"
    description: "字幕スタイル設定"
    
  encoding_config:
    path: "config/encoding_config.yaml"
    description: "動画エンコード設定"
    
  youtube_config:
    path: "config/youtube_config.yaml"
    description: "YouTube投稿設定"
    
  image_generation_config:
    path: "config/image_generation_config.yaml"
    description: "画像生成AI設定"

# アセット定義（変更なし）
assets:
  characters:
    path: "assets/characters/"
    description: "立ち絵スプライト"
    structure:
      - "reimu/"
      - "marisa/"
      - "common/"
      
  audio:
    path: "assets/audio/"
    description: "効果音・BGMライブラリ"
    structure:
      - "bgm/"
      - "sound_effects/"
      - "jingles/"
      
  fonts:
    path: "assets/fonts/"
    description: "字幕用フォント"
    
  templates:
    path: "assets/templates/"
    description: "各種テンプレート" 